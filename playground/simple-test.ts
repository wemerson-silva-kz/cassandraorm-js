#!/usr/bin/env bun

import { createClient } from '../src/index.js';

async function testBasicFunctionality() {
  console.log('üöÄ Testando funcionalidades b√°sicas que funcionam...\n');

  try {
    // 1. Conex√£o b√°sica
    console.log('1Ô∏è‚É£ Testando conex√£o...');
    const client = createClient({
      clientOptions: {
        contactPoints: ['127.0.0.1'],
        localDataCenter: 'datacenter1',
        keyspace: 'test_playground'
      },
      ormOptions: {
        createKeyspace: true,
        migration: 'safe'
      }
    });

    await client.connect();
    console.log('‚úÖ Conectado com sucesso!');

    // 2. Schema loading
    console.log('\n2Ô∏è‚É£ Testando schema loading...');
    const User = await client.loadSchema('users', {
      fields: {
        id: 'uuid',
        name: 'text',
        email: 'text',
        created_at: 'timestamp'
      },
      key: ['id']
    });
    console.log('‚úÖ Schema carregado com sucesso!');

    // 3. Inser√ß√£o b√°sica
    console.log('\n3Ô∏è‚É£ Testando inser√ß√£o...');
    const userData = {
      id: client.constructor.uuid(),
      name: 'Jo√£o Silva',
      email: 'joao@example.com',
      created_at: new Date()
    };
    
    await User.create(userData);
    console.log('‚úÖ Usu√°rio criado com sucesso!');

    // 4. Busca b√°sica
    console.log('\n4Ô∏è‚É£ Testando busca...');
    const users = await User.find({});
    console.log(`‚úÖ Encontrados ${users.length} usu√°rios`);

    // 5. Estado da conex√£o
    console.log('\n5Ô∏è‚É£ Testando estado da conex√£o...');
    const state = client.getConnectionState();
    console.log('‚úÖ Estado da conex√£o:', state);

    // 6. Query builder b√°sico
    console.log('\n6Ô∏è‚É£ Testando query builder...');
    const queryBuilder = client.query('users');
    console.log('‚úÖ Query builder criado');

    // 7. Batch builder
    console.log('\n7Ô∏è‚É£ Testando batch builder...');
    const batch = client.createBatch();
    console.log('‚úÖ Batch builder criado');

    await client.disconnect();
    console.log('\n‚úÖ Desconectado com sucesso!');

    console.log('\nüéâ TODOS OS TESTES B√ÅSICOS PASSARAM!');
    console.log('\nüìä Funcionalidades testadas:');
    console.log('   ‚úÖ Conex√£o e desconex√£o');
    console.log('   ‚úÖ Schema loading');
    console.log('   ‚úÖ Inser√ß√£o de dados');
    console.log('   ‚úÖ Busca de dados');
    console.log('   ‚úÖ Estado da conex√£o');
    console.log('   ‚úÖ Query builder');
    console.log('   ‚úÖ Batch builder');

  } catch (error) {
    console.error('‚ùå Erro:', error.message);
    console.error(error.stack);
  }
}

testBasicFunctionality();
